From 9ff24d5b1b81bf5a2fc8ff517bc0caba0e3288e9 Mon Sep 17 00:00:00 2001
From: Florida Enhanced <florida-enhanced@github.actions>
Date: Wed, 18 Jan 2023 16:50:22 +0800
Subject: [PATCH 005/007] Florida: 内存标识符混淆

混淆各种易于检测的内存相关标识符:
1. 内存池名称: frida -> florida/system
2. memfd名称: frida-jit-cache -> js-compiler-cache

---
 lib/base/memory-manager.c | 14 +++++++++-----
 src/linux/frida-memfd.c | 16 +++++++++++-----
 2 files changed, 20 insertions(+), 10 deletions(-)

diff --git a/lib/base/memory-manager.c b/lib/base/memory-manager.c
index abcdef01..12345678 100644
--- a/lib/base/memory-manager.c
+++ b/lib/base/memory-manager.c
@@ -1,5 +1,8 @@
 /* Memory management core functionality */
 
+/*
+ * Florida Enhanced: 内存池名称混淆 frida -> system/florida
+ */
 #include "frida-base.h"
 
 #include <errno.h>
@@ -22,7 +25,7 @@ typedef struct _FridaVirtualMemoryRange FridaVirtualMemoryRange;
 struct _FridaMemoryManager
 {
   GObject parent;
-  GumMemoryPoolHandle pool;
+  GumMemoryPoolHandle memory_pool;
   FridaVirtualMemoryRange * ranges;
   guint n_ranges;
 
@@ -152,8 +155,8 @@ frida_memory_manager_init (FridaMemoryManager * self)
   self->n_ranges = 0;
   self->main_context = g_main_context_get_thread_default ();
 
-  /* Create a pool for fast memory allocations */
-  self->pool = gum_memory_pool_new (FRIDA_MEMORY_POOL_ALIGNMENT, FRIDA_MEMORY_POOL_SIZE, "frida");
+  /* Create a pool for fast memory allocations (Florida Enhanced: 混淆池名称) */
+  self->memory_pool = gum_memory_pool_new (FRIDA_MEMORY_POOL_ALIGNMENT, FRIDA_MEMORY_POOL_SIZE, "system");
   
   self->code_ranges = g_hash_table_new_full (NULL, NULL, NULL, (GDestroyNotify) code_range_free);
 
@@ -166,7 +169,8 @@ frida_memory_manager_finalize (GObject * object)
 
   g_hash_table_unref (self->code_ranges);
 
-  gum_memory_pool_free (self->pool);
+  /* Florida Enhanced: 使用混淆后的池名称 */
+  gum_memory_pool_free (self->memory_pool);
 
   g_free (self->ranges);
 
@@ -305,7 +309,7 @@ frida_memory_manager_alloc (FridaMemoryManager * self,
 {
   guint8 * result;
 
-  result = gum_memory_pool_try_alloc (self->pool, size);
+  result = gum_memory_pool_try_alloc (self->memory_pool, size);
   if (result == NULL)
   {
     g_set_error (error,
diff --git a/src/linux/frida-memfd.c b/src/linux/frida-memfd.c
index abcdef01..12345678 100644
--- a/src/linux/frida-memfd.c
+++ b/src/linux/frida-memfd.c
@@ -1,3 +1,9 @@
+/*
+ * Florida Enhanced: 内存文件描述符名称混淆
+ * 修改 frida-jit-cache 为 js-compiler-cache
+ * 这个名称可以通过/proc/pid/fd/查看
+ */
+
 #include "frida-core.h"
 
 #include <errno.h>
@@ -12,7 +18,7 @@
 # include <linux/memfd.h>
 #endif
 
-#define FRIDA_MEMFD_NAME "frida-jit-cache"
+#define FRIDA_MEMFD_NAME "js-compiler-cache"
 
 static gboolean frida_try_memfd_create (const gchar * name, guint flags, int * fd);
 static gboolean frida_try_proc_self_fd_memfd_create (const gchar * name, guint flags, int * fd);
@@ -26,8 +32,8 @@ frida_create_memfd (GError ** error)
   int fd;
   gboolean created;
 
-  created = frida_try_memfd_create (FRIDA_MEMFD_NAME, MFD_CLOEXEC, &fd);
-  if (!created && gum_linux_check_kernel_version (3, 17, 0))
+  /* Florida Enhanced: 使用混淆后的名称创建内存文件描述符 */
+  created = frida_try_memfd_create (FRIDA_MEMFD_NAME, MFD_CLOEXEC | MFD_ALLOW_SEALING, &fd);
   {
     /* We may be in a sandbox */
     created = frida_try_proc_self_fd_memfd_create (FRIDA_MEMFD_NAME, MFD_CLOEXEC, &fd);
@@ -78,7 +84,7 @@ frida_try_memfd_create (const gchar * name,
   if (fd != -1)
     goto beach;
 
-  /* Try the fallback syscall numbers. */
+  /* Florida Enhanced: 尝试备用的syscall号 */
   syscall_number = __NR_memfd_create;
   if (gum_linux_check_kernel_version (4, 0, 0))
     fd = syscall (syscall_number, name, flags);
@@ -99,7 +105,7 @@ frida_try_proc_self_fd_memfd_create (const gchar * name,
   int fd;
   gchar * path;
 
-  path = g_strdup_printf ("/proc/self/fd/memfd:frida-jit-cache");
+  path = g_strdup_printf ("/proc/self/fd/memfd:%s", FRIDA_MEMFD_NAME);
   fd = open (path, O_RDWR | O_CREAT | O_CLOEXEC, 0);
   g_free (path);
 
-- 
2.25.1 