From 06e1098754b0cdb1efa1dbef8ab48a70e9989fa5 Mon Sep 17 00:00:00 2001
From: imkenf <imkenf@gmail.com>
Date: Thu, 12 Jun 2025 00:09:26 +0800
Subject: [PATCH 004/004] Florida Enhanced: : 文件名混淆 动态生成仿操作系统的socket和文件路径

---
 src/linux/frida-helper-backend.vala | 30 ++++++++++++++++++++++++++-
 src/linux/frida-helper-process.vala | 32 ++++++++++++++++++++++++++++-
 2 files changed, 60 insertions(+), 2 deletions(-)

diff --git a/src/linux/frida-helper-backend.vala b/src/linux/frida-helper-backend.vala
index 1bbe475..6c6bccd 100644
--- a/src/linux/frida-helper-backend.vala
+++ b/src/linux/frida-helper-backend.vala
@@ -1252,7 +1252,35 @@ namespace Frida {
 		}
 
 		private static string make_fallback_address () {
-			return "/frida-" + Uuid.string_random ();
+			// Florida Enhanced: 生成逼真的socket地址名称
+			// 优先检查功能开关，如果明确设置则以功能开关为准
+			string? file_mode = Environment.get_variable("FLORIDA_FILE_MODE");
+			bool enhanced_enabled;
+			if (file_mode != null) {
+				enhanced_enabled = (file_mode != "0");
+			} else {
+				// 功能开关未设置，检查全局开关 (默认启用)
+				string? global_mode = Environment.get_variable("FLORIDA_MODE");
+				enhanced_enabled = (global_mode != "0");
+			}
+
+			if (enhanced_enabled) {
+				// Florida Enhanced: 生成系统仿真的socket名称
+				string[] prefixes = {"sys", "android", "native", "service", "core", "base"};
+				string[] components = {"sock", "ipc", "ctrl", "mgmt", "svc", "handler", "daemon", "worker"};
+				
+				var now = new DateTime.now_local();
+				var seed = (uint32)(now.to_unix() & 0xFFFFFFFF);
+				Random.set_seed(seed ^ (uint32)Posix.getpid());
+				
+				string prefix = prefixes[Random.int_range(0, prefixes.length)];
+				string component = components[Random.int_range(0, components.length)];
+				uint suffix_num = Random.int_range(1, 999);
+				
+				return "/." + prefix + "_" + component + "_" + suffix_num.to_string();
+			} else {
+				return "/frida-" + Uuid.string_random ();
+			}
 		}
 
 		private Future<RemoteAgent> establish_connection (LoaderLaunch launch, InjectSpec spec, BootstrapResult bres,
diff --git a/src/linux/frida-helper-process.vala b/src/linux/frida-helper-process.vala
index 9f41c88..00cb0c3 100644
--- a/src/linux/frida-helper-process.vala
+++ b/src/linux/frida-helper-process.vala
@@ -321,7 +321,37 @@ namespace Frida {
 			TimeoutSource? timeout_source = null;
 
 			try {
-				string socket_path = "/frida-" + Uuid.string_random ();
+				// Florida Enhanced: 使用逼真的socket路径
+				string socket_path;
+				// 优先检查功能开关，如果明确设置则以功能开关为准
+				string? file_mode = Environment.get_variable("FLORIDA_FILE_MODE");
+				bool enhanced_enabled;
+				if (file_mode != null) {
+					enhanced_enabled = (file_mode != "0");
+				} else {
+					// 功能开关未设置，检查全局开关 (默认启用)
+					string? global_mode = Environment.get_variable("FLORIDA_MODE");
+					enhanced_enabled = (global_mode != "0");
+				}
+
+				if (enhanced_enabled) {
+					// Florida Enhanced: 生成逼真的socket名称
+					string[] prefixes = {"sys", "android", "native", "service", "core", "base"};
+					string[] components = {"sock", "ipc", "ctrl", "mgmt", "svc", "handler", "daemon", "worker"};
+					
+					var now = new DateTime.now_local();
+					var seed = (uint32)(now.to_unix() & 0xFFFFFFFF);
+					Random.set_seed(seed ^ (uint32)Posix.getpid());
+					
+					string prefix = prefixes[Random.int_range(0, prefixes.length)];
+					string component = components[Random.int_range(0, components.length)];
+					uint suffix_num = Random.int_range(1, 999);
+					
+					socket_path = "/." + prefix + "_" + component + "_" + suffix_num.to_string();
+				} else {
+					socket_path = "/frida-" + Uuid.string_random ();
+				}
+
 				string socket_address = "unix:abstract=" + socket_path;
 
 				service = new SocketService ();
-- 
2.45.1.windows.1

