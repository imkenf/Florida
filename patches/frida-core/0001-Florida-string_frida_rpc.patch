From 9ff24d5b1b81bf5a2fc8ff517bc0caba0e3288e9 Mon Sep 17 00:00:00 2001
From: Enhanced Florida <enhanced@florida.dev>
Date: Tue, 18 Jul 2023 15:51:29 +0800
Subject: [PATCH 1/10] Enhanced: advanced RPC protocol obfuscation

---
 lib/base/rpc.vala | 47 ++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 42 insertions(+), 5 deletions(-)

diff --git a/lib/base/rpc.vala b/lib/base/rpc.vala
index 8990b70e..d5acfebd 100644
--- a/lib/base/rpc.vala
+++ b/lib/base/rpc.vala
@@ -1,3 +1,36 @@
+// Enhanced: Dynamic RPC protocol string generator
+namespace FridaEnhanced {
+	public class ProtocolObfuscator {
+		private static string? obfuscated_protocol = null;
+
+		public static string get_dynamic_protocol() {
+			if (obfuscated_protocol == null) {
+				var now = new DateTime.now_local();
+				var seed = (uint32)(now.to_unix() & 0xFFFFFFFF);
+				Random.set_seed(seed ^ (uint32)Posix.getpid());
+				
+				var base_chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
+				var prefixes = new string[] { "sys", "net", "core", "lib", "api", "rpc", "msg" };
+				var suffixes = new string[] { "proto", "chan", "pipe", "comm", "link", "bridge" };
+				
+				var prefix = prefixes[Random.int_range(0, prefixes.length)];
+				var suffix = suffixes[Random.int_range(0, suffixes.length)];
+				var random_mid = "%04x".printf((uint16)(seed & 0xFFFF));
+				
+				obfuscated_protocol = "%s:%s%s".printf(prefix, suffix, random_mid);
+			}
+			return obfuscated_protocol;
+		}
+		
+		public static string get_quoted_protocol() {
+			return "\"%s\"".printf(get_dynamic_protocol());
+		}
+	}
+}
+
+// Include the enhanced obfuscator
+using FridaEnhanced;
+
 namespace Frida {
 	public sealed class RpcClient : Object {
 		public weak RpcPeer peer {
@@ -17,7 +50,7 @@ namespace Frida {
 			var request = new Json.Builder ();
 			request
 				.begin_array ()
-				.add_string_value ("frida:rpc")
+				.add_string_value (ProtocolObfuscator.get_dynamic_protocol())
 				.add_string_value (request_id)
 				.add_string_value ("call")
 				.add_string_value (method)
@@ -65,7 +98,7 @@ namespace Frida {
 		}
 
 		public bool try_handle_message (string json) {
-			if (json.index_of ("\"frida:rpc\"") == -1)
+			if (json.index_of (ProtocolObfuscator.get_quoted_protocol()) == -1)
 				return false;
 
 			var parser = new Json.Parser ();
@@ -94,7 +127,7 @@ namespace Frida {
 				return false;
 
 			string? type = rpc_message.get_element (0).get_string ();
-			if (type == null || type != "frida:rpc")
+			if (type == null || type != ProtocolObfuscator.get_dynamic_protocol())
 				return false;
 
 			var request_id_value = rpc_message.get_element (1);
-- 
2.47.1

